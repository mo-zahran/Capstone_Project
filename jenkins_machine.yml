AWSTemplateFormatVersion: "2010-09-09"
Description: This is the setup of Jenkins CICD machine
Parameters:

  ProjectName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  CreatorName:
    Description: Name of the resource creator
    Type: String

  PemKeyName:
    Description: Name of the Key name that is required for SSH
    Type: String

  JenkinsRole:
    Description: Name of the IAM role that is used for setup of Jenkins machine
    Type: String

  ImageID:
    Description: Image ID value used for Jenkins machine
    Type: String
    Default: ami-0ad40fe9cc9ba0f46

  Type:
    Description: The type of EC2 instance
    Type: String
    Default: t2.micro


Resources:
  WebServerSecGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Allow http to our hosts and SSH for all servers only
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-CI-CD-Pipeline"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} Jekins Sec Group
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: CreatorName
          Value: !Ref CreatorName

  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref JenkinsRole

  JenkinsHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageID
      InstanceType: !Ref Type
      KeyName: !Ref PemKeyName
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update && sudo apt-get -y upgrade
          sudo apt-get -y install default-jdk
          wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
          sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
          sudo apt update
          sudo apt -y install jenkins
          sudo systemctl start jenkins
          sudo systemctl enable jenkins
          sudo apt update
          sudo apt -y install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
          sudo apt update
          sudo apt -y install docker-ce
          sudo apt -y install tidy
          sudo chmod 666 /var/run/docker.sock
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue:
              !Sub "${ProjectName}-JENKINS-SN"
          GroupSet:
            - Ref: WebServerSecGroup
      IamInstanceProfile:
        Ref: ProfileWithRolesForOurApp
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} Jenkins Host
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: CreatorName
          Value: !Ref CreatorName
Outputs:
  JenkinsHostURL:
    Description: The Jenkins AWS URL
    Value: !Join ["", ["http://", !GetAtt JenkinsHost.PublicDnsName,":8080"]]
    Export:
      Name: !Sub ${ProjectName}-HOST-NAME
  JenkinsHostIP:
    Description: The Jenkins AWS IP
    Value: !Join ["", ["http://", !GetAtt JenkinsHost.PublicIp]]
    Export:
      Name: !Sub ${ProjectName}-IP